name: Auto Release Base on Tag

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5 # 5 minutes

    steps:
      - name: Check if tag starts with 'v' and followed by version
        run: |
          if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+$ ]]; then
            echo "Tag starts with 'v' and is followed by a version. Proceeding with the workflow."
          else
            echo "Tag does not match the required format. Exiting workflow."
            exit 78 # This will exit the workflow with a neutral exit code
          fi

      - name: Extract version number
        id: extract_version
        run: |
          tag_ref=${{ github.ref }}
          version=$(echo $tag_ref | grep -oE "v[0-9]+")
          echo "::set-output name=version::$version"

      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }} # Use the tag that triggered the workflow

      - name: Extract package name
        id: extract_package_name
        run: |
          PACKAGE_NAME=$(grep -m 1 '"name":' package.json | awk -F'"' '{print $4}')
          echo "::set-output name=package_name::$PACKAGE_NAME"
          echo "Package name: $PACKAGE_NAME"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }} # Change to your region

      - name: Manual Login to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username ${{secrets.AWS_USERNAME}} --password-stdin ${{secrets.AWS_PASSWORD}}

      - name: Verify Docker login
        run: |
          echo "Verifying Docker login"
          docker info
          echo "Logged in to ECR"

      - name: Build Docker image
        run: |
          docker build -t ${{ steps.extract_package_name.outputs.package_name }}:${{ steps.extract_version.outputs.version }} .

      - name: Tag Docker image
        run: |
          docker tag ${{ steps.extract_package_name.outputs.package_name }}:${{ steps.extract_version.outputs.version }} ${{secrets.REPOSITORY_URL}}/${{ steps.extract_package_name.outputs.package_name }}:${{ steps.extract_version.outputs.version }}

      - name: Push Docker image to ECR
        run: |
          docker push ${{secrets.REPOSITORY_URL}}/${{ steps.extract_package_name.outputs.package_name }}:${{ steps.extract_version.outputs.version }}

      - name: Notify Discord
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: ${{ format('new server version {0}:{1} is ready for deploy', steps.extract_package_name.outputs.package_name, steps.extract_version.outputs.version) }}
